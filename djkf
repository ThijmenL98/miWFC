[1mdiff --git a/WFC4ALL(Ava)/Managers/InputManager.cs b/WFC4ALL(Ava)/Managers/InputManager.cs[m
[1mindex 26310dc..75e2881 100644[m
[1m--- a/WFC4ALL(Ava)/Managers/InputManager.cs[m
[1m+++ b/WFC4ALL(Ava)/Managers/InputManager.cs[m
[36m@@ -99,9 +99,7 @@[m [mpublic class InputManager {[m
         } catch (InvalidOperationException) {[m
             // Error caused by multithreading which will be ignored[m
         } catch (Exception exception) {[m
[31m-#if (DEBUG)[m
             Trace.WriteLine(exception);[m
[31m-#endif[m
             mainWindowVM.OutputImage = noResultFoundBM;[m
         }[m
     }[m
[36m@@ -128,9 +126,7 @@[m [mpublic class InputManager {[m
 [m
             mainWindowVM.OutputImage = result2;[m
         } catch (Exception exception) {[m
[31m-#if (DEBUG)[m
             Trace.WriteLine(exception);[m
[31m-#endif[m
             mainWindowVM.OutputImage = noResultFoundBM;[m
         }[m
     }[m
[36m@@ -164,9 +160,7 @@[m [mpublic class InputManager {[m
                 }[m
             }[m
         } catch (Exception exception) {[m
[31m-#if (DEBUG)[m
             Trace.WriteLine(exception);[m
[31m-#endif[m
             mainWindowVM.OutputImage = noResultFoundBM;[m
         }[m
     }[m
[36m@@ -239,9 +233,7 @@[m [mpublic class InputManager {[m
                 }[m
             }[m
         } catch (Exception exception) {[m
[31m-#if (DEBUG)[m
             Trace.WriteLine(exception);[m
[31m-#endif[m
             mainWindowVM.OutputImage = noResultFoundBM;[m
         }[m
     }[m
[36m@@ -312,9 +304,7 @@[m [mpublic class InputManager {[m
                         return;[m
                     }[m
                 } catch (Exception exception) {[m
[31m-#if (DEBUG)[m
                     Trace.WriteLine(exception);[m
[31m-#endif[m
                     mainWindowVM.OutputImage = noResultFoundBM;[m
                 }[m
 [m
[1mdiff --git a/WFC4ALL(Ava)/Managers/WFCHandler.cs b/WFC4ALL(Ava)/Managers/WFCHandler.cs[m
[1mindex 6b0cae2..aabd02f 100644[m
[1m--- a/WFC4ALL(Ava)/Managers/WFCHandler.cs[m
[1m+++ b/WFC4ALL(Ava)/Managers/WFCHandler.cs[m
[36m@@ -120,7 +120,7 @@[m [mpublic class WFCHandler {[m
             return (new WriteableBitmap(new PixelSize(1, 1), Vector.One, PixelFormat.Bgra8888, AlphaFormat.Premul),[m
                 true);[m
         }[m
[31m-        [m
[32m+[m
         mainWindowVM.setLoading(true);[m
 [m
         if (reset) {[m
[36m@@ -240,7 +240,9 @@[m [mpublic class WFCHandler {[m
                 weight = weight == 0 ? 0.00000000001d : weight;[m
                 ((AdjacentModel) dbModel).setFrequency(tileCache[parent].Item2, weight);[m
                 if (weight == 0) {[m
[32m+[m[32m#if DEBUG[m
                     Trace.WriteLine("Zero weight found");[m
[32m+[m[32m#endif[m
                     dbPropagator.updateZeroWeight(parent);[m
                 }[m
 [m
[36m@@ -271,7 +273,7 @@[m [mpublic class WFCHandler {[m
                 new TileRotation(hasRotations ? 4 : 1, false));[m
 [m
         originalWeights = patternWeights;[m
[31m-        [m
[32m+[m
         toAdd.AddRange(patternList.Select((t, i) => parentCM.getUIManager()[m
                 .addPattern(t, patternWeights[i], tileSymmetries, i))[m
             .Where(nextTVM => nextTVM != null)!);[m
[36m@@ -460,7 +462,7 @@[m [mpublic class WFCHandler {[m
                 if (possibleTiles.Count == 1 && possibleTiles.Contains(c)) {[m
                     return (null, null);[m
                 }[m
[31m-                [m
[32m+[m
                 return (null, false);[m
             }[m
 [m
[36m@@ -490,6 +492,7 @@[m [mpublic class WFCHandler {[m
             return (getLatestOutputBM(), true);[m
 [m
             #endregion[m
[32m+[m
             // ReSharper disable once RedundantIfElseBlock[m
         } else {[m
             #region Adjacent Tile Selection[m
[36m@@ -610,13 +613,12 @@[m [mpublic class WFCHandler {[m
                     int selectedIndex = dbPropagator.Topology.GetIndex(x, (int) y, 0);[m
                     ISet<Color> possibleTiles = dbPropagator.GetPossibleValues<Color>(selectedIndex);[m
 [m
[31m-                    Color toSet = possibleTiles.Count == 1 [m
[32m+[m[32m                    Color toSet = possibleTiles.Count == 1[m
                         ? possibleTiles.First()[m
                         : currentColors!.Contains(c)[m
                             ? c[m
                             : grid[m
[31m-                                ? (x + y) % 2 == 0 ? Color.Parse("#11000000") :[m
[31m-                                Color.Parse("#00000000")[m
[32m+[m[32m                                ? (x + y) % 2 == 0 ? Color.Parse("#11000000") : Color.Parse("#00000000")[m
                                 : Color.Parse("#00000000");[m
                     dest[x] = (uint) ((toSet.A << 24) + (toSet.R << 16) + (toSet.G << 8) + toSet.B);[m
 [m
[36m@@ -658,8 +660,9 @@[m [mpublic class WFCHandler {[m
                     Color[]? outputPattern = isCollapsed ? tileCache.ElementAt(value).Value.Item1 : null;[m
                     Color c = outputPattern?[y % tileSize * tileSize + x % tileSize] ?? (grid[m
                         ? ((int) Math.Floor((double) x / tileSize) +[m
[31m-                           (int) Math.Floor((double) y / tileSize)) % 2 == 0 ? Color.Parse("#11000000") :[m
[31m-                        Color.Parse("#00000000")[m
[32m+[m[32m                           (int) Math.Floor((double) y / tileSize)) % 2 == 0[m
[32m+[m[32m                            ? Color.Parse("#11000000")[m
[32m+[m[32m                            : Color.Parse("#00000000")[m
                         : Color.Parse("#00000000"));[m
                     dest[x] = (uint) ((c.A << 24) + (c.R << 16) + (c.G << 8) + c.B);[m
 [m
[1mdiff --git a/WFC4ALL(Ava)/ViewModels/TileViewModel.cs b/WFC4ALL(Ava)/ViewModels/TileViewModel.cs[m
[1mindex 6ed1db1..5b3ccf4 100644[m
[1m--- a/WFC4ALL(Ava)/ViewModels/TileViewModel.cs[m
[1m+++ b/WFC4ALL(Ava)/ViewModels/TileViewModel.cs[m
[36m@@ -1,4 +1,5 @@[m
 ï»¿using System;[m
[32m+[m[32musing System.Diagnostics;[m
 using Avalonia.Media;[m
 using Avalonia.Media.Imaging;[m
 using ReactiveUI;[m
[36m@@ -123,7 +124,7 @@[m [mpublic class TileViewModel : ReactiveObject {[m
     }[m
 [m
     private void handleWeightChange(bool increment) {[m
[31m-        if (!(PatternWeight > 0)) {[m
[32m+[m[32m        if (!increment && !(PatternWeight > 0)) {[m
             return;[m
         }[m
 [m
[1mdiff --git a/WFC4ALL(Ava)/Views/PaintingWindow.axaml.cs b/WFC4ALL(Ava)/Views/PaintingWindow.axaml.cs[m
[1mindex ffd2d41..277936f 100644[m
[1m--- a/WFC4ALL(Ava)/Views/PaintingWindow.axaml.cs[m
[1m+++ b/WFC4ALL(Ava)/Views/PaintingWindow.axaml.cs[m
[36m@@ -95,9 +95,7 @@[m [mpublic partial class PaintingWindow : Window {[m
                     (int) Math.Round(imgHeight - (sender as Image)!.Margin.Top - (sender as Image)!.Margin.Bottom),[m
                     centralManager!.getMainWindowVM().PaintKeepModeEnabled);[m
             } catch (IndexOutOfRangeException exception) {[m
[31m-#if DEBUG[m
                 Trace.WriteLine(exception);[m
[31m-#endif[m
             }[m
         } else if (centralManager!.getMainWindowVM().PencilModeEnabled) {[m
             (double hoverX, double hoverY) = e.GetPosition(e.Source as Image);[m
