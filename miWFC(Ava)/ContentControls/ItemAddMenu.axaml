<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             Width="750" d:DesignHeight="766" d:DesignWidth="750" MinHeight="766"
             xmlns:viewModels="clr-namespace:miWFC.ViewModels"
             x:Class="miWFC.ContentControls.ItemAddMenu">

	<Design.DataContext>
		<viewModels:MainWindowViewModel />
	</Design.DataContext>

	<UserControl.Styles>
		<Style Selector="DataValidationErrors">
			<Setter Property="Template" Value="{DynamicResource TooltipDataValidationContentTemplate}" />
			<Setter Property="ErrorTemplate" Value="{DynamicResource TooltipDataValidationErrorTemplate}" />
		</Style>
	</UserControl.Styles>

	<Border BorderBrush="#66000000" BorderThickness="5" CornerRadius="10">
		<Grid x:Name="itemEditorGrid" RowDefinitions="Auto, Auto, *" Margin="15">
			<Grid Grid.Row="0" RowDefinitions="Auto, *" ColumnDefinitions="Auto, Auto, *" Margin="5"
			      HorizontalAlignment="Center">
				<TextBox Grid.Row="0" Grid.Column="0" Watermark="Item Name" MinHeight="40" MinWidth="300"
				         Margin="5" HorizontalAlignment="Stretch" AcceptsReturn="False" AcceptsTab="False"
				         Text="{Binding ItemVM.DisplayName}"
				         VerticalContentAlignment="Center" x:Name="itemName" />

				<Grid Grid.Row="1" Grid.Column="0" RowDefinitions="*, Auto">
					<Grid Grid.Row="0" ColumnDefinitions="Auto, Auto, *" HorizontalAlignment="Center" Margin="0, 10, 0, -2">

						<TextBlock Grid.Column="0" Grid.Row="0" Text="Amount:" HorizontalAlignment="Center"
						           VerticalAlignment="Center" Margin="5" />
						<RadioButton Grid.Column="1" Margin="5, 0" IsChecked="{Binding !ItemVM.ItemsInRange}" Content="Fixed" />
						<RadioButton Grid.Column="2" Margin="5, 0" IsChecked="{Binding ItemVM.ItemsInRange}" Content="Range" />
					</Grid>

					<NumericUpDown Grid.Row="1" MaxHeight="10" Value="{Binding ItemVM.ItemsToAddValue}"
					               IsVisible="{Binding !ItemVM.ItemsInRange}"
					               HorizontalAlignment="Center" Minimum="1" />

					<Grid Grid.Row="1" IsVisible="{Binding ItemVM.ItemsInRange}" ColumnDefinitions="Auto, Auto, Auto"
					      HorizontalAlignment="Center">
						<NumericUpDown Grid.Column="0" MaxHeight="10" Value="{Binding ItemVM.ItemsToAddLower}" Minimum="1"
						               HorizontalAlignment="Center" ValueChanged="AmountRange_OnValueChanged" x:Name="NUDLower" />
						<TextBlock Grid.Column="1" Text="to" HorizontalAlignment="Center"
						           VerticalAlignment="Center" Margin="5" />
						<NumericUpDown Grid.Column="2" MaxHeight="10" Value="{Binding ItemVM.ItemsToAddUpper}" Minimum="1"
						               HorizontalAlignment="Center" ValueChanged="AmountRange_OnValueChanged" x:Name="NUDUpper" />
					</Grid>
				</Grid>

				<Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" RowDefinitions="*, Auto" VerticalAlignment="Center" Width="100"
				      Margin="50, 5">
					<TextBlock Grid.Row="0" Text="Item Colour:" HorizontalAlignment="Center"
					           VerticalAlignment="Center" Margin="5" />
					<TextBox Grid.Row="1" Watermark="#RRGGBB" Height="40" Margin="5"
					         HorizontalAlignment="Stretch" AcceptsReturn="False" AcceptsTab="False"
					         Text="{Binding ItemVM.ItemColour}"
					         VerticalContentAlignment="Center" Width="100" x:Name="itemColour" />
				</Grid>

				<Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" BoxShadow="0 0 15 0.25 Black"
				        Margin="50, 5,5,5"
				        Background="#22000000" CornerRadius="10" HorizontalAlignment="Stretch" ClipToBounds="True">
					<Image Width="100" Height="100" Source="{Binding ItemVM.CurrentItemImage}"
					       RenderOptions.BitmapInterpolationMode="Default" />
				</Border>
			</Grid>

			<Separator Grid.Row="1" Background="#44000000" Height="4" CornerRadius="2" Margin="5" />

			<Grid Grid.Row="2" RowDefinitions="Auto, Auto, *" ColumnDefinitions="*, Auto" Margin="5">
				<Grid Grid.Column="0" Grid.Row="0" RowDefinitions="Auto, Auto, Auto">
					<TextBlock Grid.Row="0" Text="Where to appear:" VerticalAlignment="Center" Margin="5" />

					<RadioButton Grid.Row="1" Margin="25, 0, 5, 0" IsChecked="{Binding !ItemVM.ItemsMayAppearAnywhere}"
					             Content="Dynamic" />
					<RadioButton Grid.Row="2" Margin="25, 0, 5, 0" IsChecked="{Binding ItemVM.ItemsMayAppearAnywhere}"
					             Content="Anywhere" />
				</Grid>

				<Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Margin="5, 0, 5, 110" RowDefinitions="Auto, *"
				      Width="245"
				      IsVisible="{Binding !ItemVM.ItemsMayAppearAnywhere}">
					<TextBlock Grid.Row="0" Text="Please select the allowed tiles:" Margin="5, 5, 5, 15" />

					<Border Background="#22000000" Grid.Row="1"
					        BoxShadow="0 0 15 0.25 Black" CornerRadius="15">
						<ScrollViewer VerticalScrollBarVisibility="Auto">
							<ItemsControl Items="{Binding PaintTiles}" x:Name="itemMenuItemsControl">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<WrapPanel HorizontalAlignment="Center" Margin="3" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>

								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<Grid ColumnDefinitions="Auto, Auto" Margin="5">
											<!-- ReSharper disable twice Xaml.BindingWithContextNotResolved -->
											<CheckBox Grid.Column="0" Margin="10, 0, -10, 0"
											          Command="{Binding ForwardSelectionToggle}"
											          IsChecked="{Binding ItemAddChecked}" />
											<Border Grid.Column="1" Width="58" Padding="1" Background="#55000000"
											        CornerRadius="9"
											        Margin="5" PointerReleased="InputElement_OnPointerReleased">
												<Border Padding="-4" CornerRadius="5" ClipToBounds="True" Margin="4"
												        Background="#552FACED">
													<!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
													<Image Width="50" Height="50" Margin="4"
													       Source="{Binding PatternImage}"
													       RenderOptions.BitmapInterpolationMode="Default">
														<Image.RenderTransform>
															<TransformGroup>
																<!-- ReSharper disable twice Xaml.BindingWithContextNotResolved -->
																<RotateTransform
																	Angle="{Binding Path=PatternRotation, TargetNullValue=0, FallbackValue=0}" />
																<ScaleTransform
																	ScaleX="{Binding Path=PatternFlipping, TargetNullValue=0, FallbackValue=0}" />
															</TransformGroup>
														</Image.RenderTransform>
													</Image>
												</Border>
											</Border>
										</Grid>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</ScrollViewer>
					</Border>
				</Grid>

				<Separator Grid.Column="0" Grid.Row="1" Margin="5" Background="#44000000" Height="4" CornerRadius="2" />

				<Grid Grid.Column="0" Grid.Row="2" RowDefinitions="Auto, Auto, Auto, Auto, Auto">
					<TextBlock Grid.Row="0" Text="(Optional) Select linked item:" VerticalAlignment="Center" Margin="5" />

					<RadioButton Grid.Row="1" Margin="25, 0, 5, 0" IsChecked="{Binding !ItemVM.ItemIsDependent}"
					             Content="None" />
					<Grid Grid.Row="2" Margin="25, 0, 5, 0" ColumnDefinitions="Auto, *">
						<RadioButton Grid.Column="0" IsChecked="{Binding ItemVM.ItemIsDependent}"
						             Content="" />

						<TextBox Grid.Row="0" Grid.Column="1" Watermark="Dependent Item Name" MinHeight="40" MinWidth="200"
						         MaxWidth="300"
						         Margin="25, 5" HorizontalAlignment="Stretch" AcceptsReturn="False" AcceptsTab="False"
						         Text="{Binding ItemVM.DependentItemName}" VerticalContentAlignment="Center"
						         IsEnabled="{Binding ItemVM.ItemIsDependent}" x:Name="depItemName" />
					</Grid>

					<Grid Grid.Column="0" Grid.Row="3" ColumnDefinitions="Auto, Auto" RowDefinitions="Auto, Auto"
					      IsVisible="{Binding !ItemVM.ItemIsDependent}">
						<TextBlock Grid.Row="0" Grid.Column="0" Text="Dependent Item Colour:" HorizontalAlignment="Center"
						           VerticalAlignment="Center" Margin="5,50,5,5" />
						<TextBox Grid.Row="0" Grid.Column="1" Watermark="#RRGGBB (Default is Red)" Height="40" Margin="25, 50, 15, 5"
						         HorizontalAlignment="Stretch" AcceptsReturn="False" AcceptsTab="False"
						         Text="{Binding ItemVM.DepItemColour}"
						         VerticalContentAlignment="Center" x:Name="depItemColour" />

						<Image Grid.Row="1" Grid.Column="0" Height="175" Source="/Assets/Goldilock.png" HorizontalAlignment="Left"
						       Margin="15" />

						<Grid Grid.Row="1" Grid.Column="1" RowDefinitions="Auto, Auto" ColumnDefinitions="Auto, *"
						      VerticalAlignment="Center" Margin="15">
							<TextBlock Grid.Column="0" Grid.Row="0" Text="Max distance:" Margin="15, 35" />
							<NumericUpDown Grid.Row="0" Grid.Column="1" MaxHeight="10" Value="{Binding ItemVM.DepMaxDistance}"
							               ValueChanged="DependencyDistance_OnValueChanged" x:Name="NUDMaxDist" Minimum="1" />

							<TextBlock Grid.Column="0" Grid.Row="1" Text="Min distance:" Margin="15, 35" />
							<NumericUpDown Grid.Row="1" Grid.Column="1" MaxHeight="10" Value="{Binding ItemVM.DepMinDistance}"
							               ValueChanged="DependencyDistance_OnValueChanged" x:Name="NUDMinDist" Minimum="1" />
						</Grid>
					</Grid>

					<Separator Grid.Column="0" Grid.Row="4" Margin="5" Background="#44000000" Height="4" CornerRadius="2" />
				</Grid>

				<Grid Grid.Column="0" Grid.Row="2" RowDefinitions="*, Auto"
				      ColumnDefinitions="*, Auto, Auto, Auto, Auto, Auto"
				      ColumnSpan="2">
					<GridSplitter Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"
					              IsEnabled="False" Background="Transparent" />

					<GridSplitter Grid.Row="1" Grid.Column="1" Width="20"
					              IsEnabled="False" Background="Transparent"
					              IsVisible="{Binding !ItemVM.ItemsMayAppearAnywhere}" />

					<Button Padding="0" Grid.Column="2" Grid.Row="1" Width="80" Margin="0, 5"
					        Command="{Binding ItemVM.EnterRegionEditor}" Background="Transparent">
						<Button.Styles>
							<Style Selector="Button:pointerover /template/ ContentPresenter">
								<Setter Property="Content" Value="{DynamicResource hoverWeightMappingKey}" />
								<Setter Property="Background" Value="Transparent" />
							</Style>
							<Style Selector="Button:pressed /template/ ContentPresenter">
								<Setter Property="Content" Value="{DynamicResource clickWeightMappingKey}" />
								<Setter Property="Background" Value="Transparent" />
							</Style>
						</Button.Styles>
						<Panel>
							<Image Source="/Assets/WeightMapping.png" />
						</Panel>
						<ToolTip.Tip>
							<StackPanel>
								<TextBlock TextWrapping="Wrap">Define where items are allowed to appear in the output</TextBlock>
							</StackPanel>
						</ToolTip.Tip>
					</Button>

					<GridSplitter Grid.Row="1" Grid.Column="3" Width="15"
					              IsEnabled="False" Background="Transparent"
					              IsVisible="{Binding !ItemVM.ItemsMayAppearAnywhere}" />

					<Button Padding="0" Background="Transparent" Grid.Row="1" VerticalAlignment="Bottom"
					        Command="{Binding ItemVM.AddItemToDataGrid}" Grid.Column="4"
					        HorizontalAlignment="Center" Margin="0, 5" MaxWidth="80">
						<Button.Styles>
							<Style Selector="Button:pointerover /template/ ContentPresenter">
								<Setter Property="Content" Value="{DynamicResource hoverApplyKey}" />
								<Setter Property="Background" Value="Transparent" />
							</Style>
							<Style Selector="Button:pressed /template/ ContentPresenter">
								<Setter Property="Content" Value="{DynamicResource clickApplyKey}" />
								<Setter Property="Background" Value="Transparent" />
							</Style>
						</Button.Styles>
						<Panel>
							<Image Source="/Assets/Apply.png" />
						</Panel>
						<ToolTip.Tip>
							<StackPanel>
								<TextBlock TextWrapping="Wrap">Add the current item to the list</TextBlock>
							</StackPanel>
						</ToolTip.Tip>
					</Button>

					<Button Grid.Row="1" Grid.Column="5" Padding="0" Background="Transparent"
					        Command="{Binding ItemVM.ExitItemAddition}"
					        HorizontalAlignment="Center" Margin="0, 5" MaxWidth="80"
					        VerticalAlignment="Bottom">
						<Button.Styles>
							<Style Selector="Button:pointerover /template/ ContentPresenter">
								<Setter Property="Content" Value="{DynamicResource hoverBackKey}" />
								<Setter Property="Background" Value="Transparent" />
							</Style>
							<Style Selector="Button:pressed /template/ ContentPresenter">
								<Setter Property="Content" Value="{DynamicResource clickBackKey}" />
								<Setter Property="Background" Value="Transparent" />
							</Style>
						</Button.Styles>
						<Panel>
							<Image Source="/Assets/Back.png" />
						</Panel>
						<ToolTip.Tip>
							<StackPanel>
								<TextBlock TextWrapping="Wrap">Exit the item editor and discard progress</TextBlock>
							</StackPanel>
						</ToolTip.Tip>
					</Button>
				</Grid>
			</Grid>
		</Grid>
	</Border>
</UserControl>